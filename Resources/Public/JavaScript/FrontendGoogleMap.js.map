{"version":3,"sources":["node_modules/browser-pack/_prelude.js","Sources/TypeScript/FrontendGoogleMap.ts","Sources/TypeScript/FrontendMap.ts","node_modules/mustache/mustache.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_super","FrontendMap_1","FrontendGoogleMap","default","__extends","prototype","initializeMap","center","_this","this","mapConfiguration","google","maps","LatLng","lat","lng","mapOptions","zoom","disableDefaultUI","zoomControl","zoomControlOptions","style","ZoomControlStyle","LARGE","styles","self","mapStyles","map","Map","$","afterSearch","navigator","geolocation","getCurrentPosition","position","pos","coords","latitude","longitude","setCenter","initializeLayer","apiV3Layers","indexOf","TrafficLayer","setMap","BicyclingLayer","KmlLayer","url","kmlUrl","showInformation","location","marker","renderSingleViewCallback","infoWindowTemplate","infoWindow","close","setContent","renderInfoWindowContent","setPosition","getPosition","open","createMarker","icon","options","title","name","Marker","addListener","initializeInfoWindow","InfoWindow","closeInfoWindow","openInfoWindow","index","event","trigger","locations","loadScript","apiUrl","parameter","apiConsoleKey","language","hasOwnProperty","$jsDeferred","Deferred","$jsFile","src","crossorigin","appendTo","resolve","when","promise","done","window","requestAnimationFrame","wait","postLoadScript","bind","fail","console","log","Mustache","FrontendMap","render","information","processLocation","markerIcon","locationIndex","initializeLocations","initializeListEvents","document","on","$field","data","initializeTemplates","html","parse","$closeButton","handleCloseButtonCallback","active","global","factory","objectToString","Object","toString","isArray","Array","object","isFunction","escapeRegExp","string","replace","hasProperty","obj","propName","regExpTest","RegExp","test","nonSpaceRe","isWhitespace","re","entityMap","&","<",">","\"","'","/","`","=","whiteRe","spaceRe","equalsRe","curlyRe","tagRe","parseTemplate","template","tags","openingTagRe","closingTagRe","closingCurlyRe","lineHasNonSpace","sections","tokens","spaces","hasTag","nonSpace","indentation","tagIndex","stripSpace","pop","compileTags","tagsToCompile","split","mustache","start","type","value","chr","token","openSection","scanner","Scanner","eos","scanUntil","valueLength","charAt","push","scan","nestedTokens","collector","numTokens","nestTokens","lastToken","squashedTokens","squashTokens","tail","Context","view","parentContext","cache",".","parent","Writer","match","substring","search","lookup","primitive","intermediateValue","names","context","lookupHit","clearCache","cacheKey","join","partials","undefined","renderTokens","originalTemplate","symbol","buffer","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","j","slice","indentPartial","partial","filteredIndentation","partialByNl","indentedValue","escape","version","to_html","defaultWriter","TypeError","send","result","String","s","define","amd"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,iZCYA,IAOAK,EAPAC,EAAAZ,EAAA,iBAOA,SAAAa,mDAiKA,IAjKAF,EAAgCC,EAAAE,QAAAC,EAAAF,EAAAF,GAO9BE,EAAAG,UAAAC,cAAA,WAAA,IACMC,EADNC,EAAAC,KAIIF,OAD0C,IAAjCE,KAAKC,iBAAiBH,OACtB,IAAII,OAAOC,KAAKC,OAAOJ,KAAKC,iBAAiBH,OAAOO,IAAKL,KAAKC,iBAAiBH,OAAOQ,KAEtF,IAAIJ,OAAOC,KAAKC,OAAO,EAAG,GAGrC,IAAIG,EAAa,CACfC,KAAMR,KAAKC,iBAAiBO,KAC5BV,OAAQA,EACRW,kBAAkB,EAClBC,aAAa,EACbC,mBAAoB,CAClBC,MAAOV,OAAOC,KAAKU,iBAAiBC,OAEtCC,OAAS,IAGPC,KAAKf,iBAAiBgB,YACtBV,EAAWQ,OAASC,KAAKf,iBAAiBgB,WAG9CjB,KAAKkB,IAAM,IAAIhB,OAAOC,KAAKgB,IAAIC,EAAE,uBAAuB,GAAIb,GAElB,IAAtCP,KAAKC,iBAAiBoB,aAAqBC,UAAUC,aACvDD,UAAUC,YAAYC,mBAAmB,SAACC,GACxC,IAAIC,EAAM,CACRrB,IAAKoB,EAASE,OAAOC,SACrBtB,IAAKmB,EAASE,OAAOE,WAGvB9B,EAAKmB,IAAIY,UAAUJ,MAQzBjC,EAAAG,UAAAmC,gBAAA,YAC8D,EAAxD/B,KAAKC,iBAAiB+B,YAAYC,QAAQ,aACzB,IAAI/B,OAAOC,KAAK+B,cACtBC,OAAOnC,KAAKkB,MAGmC,EAA1DlB,KAAKC,iBAAiB+B,YAAYC,QAAQ,eACvB,IAAI/B,OAAOC,KAAKiC,gBACtBD,OAAOnC,KAAKkB,MAG2B,EAApDlB,KAAKC,iBAAiB+B,YAAYC,QAAQ,QAC7B,IAAI/B,OAAOC,KAAKkC,SAAS,CAACC,IAAMtC,KAAKC,iBAAiBsC,SAC5DJ,OAAOnC,KAAKkB,MAOzBzB,EAAAG,UAAA4C,gBAAA,SAAyCC,EAAoBC,GACG,mBAAnD1C,KAAKC,iBAAiB0C,yBAC/B3C,KAAKC,iBAAiB0C,yBAAyBF,EAAUzC,KAAK4C,qBAE9D5C,KAAK6C,WAAWC,QAChB9C,KAAK6C,WAAWE,WAAW/C,KAAKgD,wBAAwBP,IACxDzC,KAAK6C,WAAWI,YAAYP,EAAOQ,eACnClD,KAAK6C,WAAWM,KAAKnD,KAAKkB,IAAKwB,KAOnCjD,EAAAG,UAAAwD,aAAA,SAAaX,EAAoBY,GAAjC,IAAAtD,EAAAC,KACMsD,EAAU,CACVC,MAAOd,EAASe,KAChB/B,SAAU,IAAIvB,OAAOC,KAAKC,OAAOqC,EAASpC,IAAKoC,EAASnC,KACxD+C,KAAMA,GAERX,EAAS,IAAIxC,OAAOC,KAAKsD,OAAOH,GAOlC,OANAZ,EAAOP,OAAOnC,KAAKkB,KAEnBwB,EAAOgB,YAAY,QAAS,WAC1B3D,EAAKyC,gBAAgBC,EAAUC,KAG1BA,GAMTjD,EAAAG,UAAA+D,qBAAA,WACE3D,KAAK6C,WAAa,IAAI3C,OAAOC,KAAKyD,YAMpCnE,EAAAG,UAAAiE,gBAAA,WACE7D,KAAK6C,WAAWC,SAMlBrD,EAAAG,UAAAkE,eAAA,SAAkCC,GAChC7D,OAAOC,KAAK6D,MAAMC,QAAQjE,KAAKkE,UAAUH,GAAOrB,OAAQ,UAM1DjD,EAAAG,UAAAuE,WAAA,WACE,IAAInD,EAAOhB,KACToE,EAAS,kDACTC,EAAY,QAAUrE,KAAKC,iBAAiBqE,cAEP,KAAnCtD,EAAKf,iBAAiBsE,WACxBF,GAAa,aAAerD,EAAKf,iBAAiBsE,UAGhDvD,EAAKf,iBAAiBuE,eAAe,YACvCJ,EAASpD,EAAKf,iBAAiBmE,QAGjC,IAAIK,EAAcrD,EAAEsD,WAClBC,EAAUvD,EAAE,YAAa,CACvBwD,IAAKR,EAASC,EACdQ,YAAa,KACZC,SAAS,QAEdL,EAAYM,QAAQJ,GAEpBvD,EAAE4D,KACAP,EAAYQ,WACZC,KAAK,WAQLC,OAAOC,sBAPP,SAASC,IACe,oBAAXnF,OACTF,KAAKsF,iBAELH,OAAOC,sBAAsBC,EAAKE,KAAKvF,QAGTuF,KAAKvE,MACtCwE,KAAK,WACNC,QAAQC,IAAI,gCAGlBjG,0GCtKA,IAAAkG,EAAA/G,EAAA,YAEAgH,GAwCEA,EAAAhG,UAAAC,cAAA,aAEA+F,EAAAhG,UAAAmC,gBAAA,aAKA6D,EAAAhG,UAAAoD,wBAAA,SAAwBP,GACtB,OAAOkD,EAASE,OAAO7F,KAAK4C,mBAAoBH,EAASqD,cAG3DF,EAAAhG,UAAAwD,aAAA,SAAaX,EAAoBY,KAKjCuC,EAAAhG,UAAAmG,gBAAA,SAAmCtD,GACjC,IAAIY,EAAO,GACPZ,EAASqD,YAAYzC,KACvBA,EAAOZ,EAASqD,YAAYzC,KACnBrD,KAAKC,iBAAiBuE,eAAe,gBAC9CnB,EAAOrD,KAAKC,iBAAiB+F,YAG/BhG,KAAKiG,gBACLxD,EAASqD,YAAY/B,MAAQ/D,KAAKiG,cAClCxD,EAASC,OAAS1C,KAAKoD,aAAaX,EAAUY,IAMhDuC,EAAAhG,UAAAsG,oBAAA,WACElG,KAAKkE,UAAUhD,IAAIlB,KAAK+F,gBAAgBR,KAAKvF,QAG/C4F,EAAAhG,UAAA+D,qBAAA,aAEAiC,EAAAhG,UAAAiE,gBAAA,aAEA+B,EAAAhG,UAAAkE,eAAA,SAAkCC,KAKlC6B,EAAAhG,UAAAuG,qBAAA,WAAA,IAAApG,EAAAC,KACEoB,EAAEgF,UAAUC,GAAG,QAAS,mCAAoC,SAACrC,EAAcsC,GACzEvG,EAAK+D,eAAewC,EAAOC,KAAK,aAOpCX,EAAAhG,UAAA4G,oBAAA,WAAA,IAAAzG,EAAAC,KACEA,KAAK4C,mBAAqBxB,EAAE,uBAAuBqF,OACnDd,EAASe,MAAM1G,KAAK4C,oBAEpBxB,EAAEgF,UAAUC,GAAG,QAAS,qCAAsC,SAACrC,EAAc2C,GACb,mBAAnD5G,EAAKE,iBAAiB0C,yBAC/B5C,EAAKE,iBAAiB2G,0BAA0BD,GAEhD5G,EAAK8D,qBAQX+B,EAAAhG,UAAA0F,eAAA,WACEtF,KAAKH,gBACLG,KAAK+B,kBACL/B,KAAKkG,sBACLlG,KAAK2D,uBACL3D,KAAKwG,sBACLxG,KAAKmG,wBAGPP,EAAAhG,UAAAuE,WAAA,aACFyB,GA5FE,SAAAA,IA3BO5F,KAAAC,iBAAqC,CAC1C4G,QAAQ,EACRxF,YAAa,EACbvB,OAAQ,CACNO,IAAK,EACLC,IAAK,GAEPE,KAAM,GAEN8D,cAAe,GACfF,OAAQ,GACRG,SAAU,GAEVyB,WAAY,GACZhE,YAAa,GACbO,OAAQ,GAERI,yBAA0B,KAC1BiE,0BAA2B,MAEtB5G,KAAAkE,UAA6B,GAC7BlE,KAAAiG,cAAwB,EACxBjG,KAAA4C,mBAA6B,GAMI,iBAA3BuC,OAAOlF,kBAAgCkF,OAAOlF,iBAAiB4G,SACxE7G,KAAKC,iBAAmBkF,OAAOlF,kBAE7BD,KAAKC,mBACwB,iBAApBkF,OAAOjB,YAChBlE,KAAKkE,UAAYiB,OAAOjB,WAE1BlE,KAAKmE,4DChDX,IAAA2C,EAAAC,EAAAD,EAIA9G,KAJA+G,EAIA,WAAA,aAOA,IAAAC,EAAAC,OAAArH,UAAAsH,SACAC,EAAAC,MAAAD,SAAA,SAAAE,GACA,MAAA,mBAAAL,EAAA7H,KAAAkI,IAGA,SAAAC,EAAAD,GACA,MAAA,mBAAAA,EAWA,SAAAE,EAAAC,GACA,OAAAA,EAAAC,QAAA,8BAAA,QAOA,SAAAC,EAAAC,EAAAC,GACA,OAAA,MAAAD,GAAA,iBAAAA,GAAAC,KAAAD,EAkBA,IAAAE,EAAAC,OAAAlI,UAAAmI,KAKA,IAAAC,EAAA,KACA,SAAAC,EAAAT,GACA,OANAU,EAMAF,EANAR,EAMAA,GALAK,EAAA1I,KAAA+I,EAAAV,GADA,IAAAU,EAAAV,EASA,IAAAW,EAAA,CACAC,IAAA,QACAC,IAAA,OACAC,IAAA,OACAC,IAAA,SACAC,IAAA,QACAC,IAAA,SACAC,IAAA,SACAC,IAAA,UASA,IAAAC,EAAA,MACAC,EAAA,MACAC,EAAA,OACAC,EAAA,QACAC,EAAA,qBA4BA,SAAAC,EAAAC,EAAAC,GACA,IAAAD,EACA,MAAA,GACA,IAuBAE,EAAAC,EAAAC,EAvBAC,GAAA,EACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,GAAA,EACAC,GAAA,EACAC,EAAA,GACAC,EAAA,EAIA,SAAAC,IACA,GAAAJ,IAAAC,EACA,KAAAF,EAAAtK,eACAqK,EAAAC,EAAAM,YAEAN,EAAA,GAIAE,EADAD,GAAA,EAKA,SAAAM,EAAAC,GAIA,GAHA,iBAAAA,IACAA,EAAAA,EAAAC,MAAAtB,EAAA,KAEA1B,EAAA+C,IAAA,IAAAA,EAAA9K,OACA,MAAA,IAAAL,MAAA,iBAAAmL,GAEAd,EAAA,IAAAtB,OAAAP,EAAA2C,EAAA,IAAA,QACAb,EAAA,IAAAvB,OAAA,OAAAP,EAAA2C,EAAA,KACAZ,EAAA,IAAAxB,OAAA,OAAAP,EAAA,IAAA2C,EAAA,KAGAD,EAAAd,GAAAiB,EAAAjB,MAKA,IAHA,IAEAkB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAFAC,EAAA,IAAAC,EAAA1B,IAGAyB,EAAAE,OAAA,CAMA,GALAR,EAAAM,EAAAjJ,IAGA6I,EAAAI,EAAAG,UAAA1B,GAGA,IAAA,IAAA3K,EAAA,EAAAsM,EAAAR,EAAAnL,OAAAX,EAAAsM,IAAAtM,EAGAwJ,EAFAuC,EAAAD,EAAAS,OAAAvM,KAGAiL,EAAAuB,KAAAxB,EAAArK,QACAyK,GAAAW,IAGAjB,EADAK,GAAA,EAEAC,GAAA,KAGAJ,EAAAwB,KAAA,CAAA,OAAAT,EAAAH,EAAAA,EAAA,IACAA,GAAA,EAGA,OAAAG,IACAT,IACAF,EAAA,GACAC,EAAA,EACAP,GAAA,GAMA,IAAAoB,EAAAO,KAAA9B,GACA,MAuBA,GArBAO,GAAA,EAGAW,EAAAK,EAAAO,KAAAlC,IAAA,OACA2B,EAAAO,KAAAtC,GAGA,MAAA0B,GACAC,EAAAI,EAAAG,UAAAhC,GACA6B,EAAAO,KAAApC,GACA6B,EAAAG,UAAAzB,IACA,MAAAiB,GACAC,EAAAI,EAAAG,UAAAxB,GACAqB,EAAAO,KAAAnC,GACA4B,EAAAG,UAAAzB,GACAiB,EAAA,KAEAC,EAAAI,EAAAG,UAAAzB,IAIAsB,EAAAO,KAAA7B,GACA,MAAA,IAAAtK,MAAA,mBAAA4L,EAAAjJ,KAUA,GAPA+I,EADA,KAAAH,EACA,CAAAA,EAAAC,EAAAF,EAAAM,EAAAjJ,IAAAmI,EAAAC,EAAAP,GAEA,CAAAe,EAAAC,EAAAF,EAAAM,EAAAjJ,KAEAoI,IACAL,EAAAwB,KAAAR,GAEA,MAAAH,GAAA,MAAAA,EACAd,EAAAyB,KAAAR,QACA,GAAA,MAAAH,EAAA,CAIA,KAFAI,EAAAlB,EAAAQ,OAGA,MAAA,IAAAjL,MAAA,qBAAAwL,EAAA,QAAAF,GAEA,GAAAK,EAAA,KAAAH,EACA,MAAA,IAAAxL,MAAA,qBAAA2L,EAAA,GAAA,QAAAL,OACA,SAAAC,GAAA,MAAAA,GAAA,MAAAA,EACAV,GAAA,EACA,MAAAU,GAEAL,EAAAM,GASA,GALAR,IAGAW,EAAAlB,EAAAQ,MAGA,MAAA,IAAAjL,MAAA,qBAAA2L,EAAA,GAAA,QAAAC,EAAAjJ,KAEA,OAkCA,SAAA+H,GAMA,IALA,IAIAgB,EAJAU,EAAA,GACAC,EAAAD,EACA3B,EAAA,GAGA/K,EAAA,EAAA4M,EAAA5B,EAAArK,OAAAX,EAAA4M,IAAA5M,EAGA,QAFAgM,EAAAhB,EAAAhL,IAEA,IACA,IAAA,IACA,IAAA,IACA2M,EAAAH,KAAAR,GACAjB,EAAAyB,KAAAR,GACAW,EAAAX,EAAA,GAAA,GACA,MACA,IAAA,IACAjB,EAAAQ,MACA,GAAAS,EAAA,GACAW,EAAA,EAAA5B,EAAApK,OAAAoK,EAAAA,EAAApK,OAAA,GAAA,GAAA+L,EACA,MACA,QACAC,EAAAH,KAAAR,GAIA,OAAAU,EA5DAG,CAOA,SAAA7B,GAIA,IAHA,IAEAgB,EAAAc,EAFAC,EAAA,GAGA/M,EAAA,EAAA4M,EAAA5B,EAAArK,OAAAX,EAAA4M,IAAA5M,GACAgM,EAAAhB,EAAAhL,MAGA,SAAAgM,EAAA,IAAAc,GAAA,SAAAA,EAAA,IACAA,EAAA,IAAAd,EAAA,GACAc,EAAA,GAAAd,EAAA,KAEAe,EAAAP,KAAAR,GACAc,EAAAd,IAKA,OAAAe,EAzBAC,CAAAhC,IAmEA,SAAAmB,EAAApD,GACAxH,KAAAwH,OAAAA,EACAxH,KAAA0L,KAAAlE,EACAxH,KAAA0B,IAAA,EAyDA,SAAAiK,EAAAC,EAAAC,GACA7L,KAAA4L,KAAAA,EACA5L,KAAA8L,MAAA,CAAAC,IAAA/L,KAAA4L,MACA5L,KAAAgM,OAAAH,EAuGA,SAAAI,IACAjM,KAAA8L,MAAA,GA9JAlB,EAAAhL,UAAAiL,IAAA,WACA,MAAA,KAAA7K,KAAA0L,MAOAd,EAAAhL,UAAAsL,KAAA,SAAAhD,GACA,IAAAgE,EAAAlM,KAAA0L,KAAAQ,MAAAhE,GAEA,IAAAgE,GAAA,IAAAA,EAAAnI,MACA,MAAA,GAEA,IAAAyD,EAAA0E,EAAA,GAKA,OAHAlM,KAAA0L,KAAA1L,KAAA0L,KAAAS,UAAA3E,EAAApI,QACAY,KAAA0B,KAAA8F,EAAApI,OAEAoI,GAOAoD,EAAAhL,UAAAkL,UAAA,SAAA5C,GACA,IAAAgE,EAAAnI,EAAA/D,KAAA0L,KAAAU,OAAAlE,GAEA,OAAAnE,GACA,KAAA,EACAmI,EAAAlM,KAAA0L,KACA1L,KAAA0L,KAAA,GACA,MACA,KAAA,EACAQ,EAAA,GACA,MACA,QACAA,EAAAlM,KAAA0L,KAAAS,UAAA,EAAApI,GACA/D,KAAA0L,KAAA1L,KAAA0L,KAAAS,UAAApI,GAKA,OAFA/D,KAAA0B,KAAAwK,EAAA9M,OAEA8M,GAiBAP,EAAA/L,UAAAqL,KAAA,SAAAW,GACA,OAAA,IAAAD,EAAAC,EAAA5L,OAOA2L,EAAA/L,UAAAyM,OAAA,SAAA7I,GACA,IAEA+G,EArWA+B,EAAA1E,EAmWAkE,EAAA9L,KAAA8L,MAGA,GAAAA,EAAAtH,eAAAhB,GACA+G,EAAAuB,EAAAtI,OACA,CAGA,IAFA,IAAA+I,EAAAC,EAAAzI,EAAA0I,EAAAzM,KAAA0M,GAAA,EAEAD,GAAA,CACA,GAAA,EAAAjJ,EAAAvB,QAAA,KAsBA,IArBAsK,EAAAE,EAAAb,KACAY,EAAAhJ,EAAA2G,MAAA,KACApG,EAAA,EAmBA,MAAAwI,GAAAxI,EAAAyI,EAAApN,QACA2E,IAAAyI,EAAApN,OAAA,IACAsN,EACAhF,EAAA6E,EAAAC,EAAAzI,MArYAuI,EAsYAC,EAtYA3E,EAsYA4E,EAAAzI,GApYA,MAAAuI,GACA,iBAAAA,GACAA,EAAA9H,gBACA8H,EAAA9H,eAAAoD,KAoYA2E,EAAAA,EAAAC,EAAAzI,WAGAwI,EAAAE,EAAAb,KAAApI,GAqBAkJ,EAAAhF,EAAA+E,EAAAb,KAAApI,GAGA,GAAAkJ,EAAA,CACAnC,EAAAgC,EACA,MAGAE,EAAAA,EAAAT,OAGAF,EAAAtI,GAAA+G,EAMA,OAHAjD,EAAAiD,KACAA,EAAAA,EAAApL,KAAAa,KAAA4L,OAEArB,GAeA0B,EAAArM,UAAA+M,WAAA,WACA3M,KAAA8L,MAAA,IAQAG,EAAArM,UAAA8G,MAAA,SAAAwC,EAAAC,GACA,IAAA2C,EAAA9L,KAAA8L,MACAc,EAAA1D,EAAA,KAAAC,GAAAiB,EAAAjB,MAAA0D,KAAA,KACApD,EAAAqC,EAAAc,GAKA,OAHA,MAAAnD,IACAA,EAAAqC,EAAAc,GAAA3D,EAAAC,EAAAC,IAEAM,GAgBAwC,EAAArM,UAAAiG,OAAA,SAAAqD,EAAA0C,EAAAkB,EAAA3D,GACA,IAAAM,EAAAzJ,KAAA0G,MAAAwC,EAAAC,GACAsD,EAAAb,aAAAD,EAAAC,EAAA,IAAAD,EAAAC,OAAAmB,GACA,OAAA/M,KAAAgN,aAAAvD,EAAAgD,EAAAK,EAAA5D,EAAAC,IAYA8C,EAAArM,UAAAoN,aAAA,SAAAvD,EAAAgD,EAAAK,EAAAG,EAAA9D,GAIA,IAHA,IAEAsB,EAAAyC,EAAA3C,EAFA4C,EAAA,GAGA1O,EAAA,EAAA4M,EAAA5B,EAAArK,OAAAX,EAAA4M,IAAA5M,EACA8L,OAAAwC,EAIA,OAFAG,GADAzC,EAAAhB,EAAAhL,IACA,IAEA8L,EAAAvK,KAAAoN,cAAA3C,EAAAgC,EAAAK,EAAAG,GACA,MAAAC,EAAA3C,EAAAvK,KAAAqN,eAAA5C,EAAAgC,EAAAK,EAAAG,GACA,MAAAC,EAAA3C,EAAAvK,KAAAsN,cAAA7C,EAAAgC,EAAAK,EAAA3D,GACA,MAAA+D,EAAA3C,EAAAvK,KAAAuN,eAAA9C,EAAAgC,GACA,SAAAS,EAAA3C,EAAAvK,KAAAwN,aAAA/C,EAAAgC,GACA,SAAAS,IAAA3C,EAAAvK,KAAAyN,SAAAhD,SAEAsC,IAAAxC,IACA4C,GAAA5C,GAGA,OAAA4C,GAGAlB,EAAArM,UAAAwN,cAAA,SAAA3C,EAAAgC,EAAAK,EAAAG,GACA,IAAAjM,EAAAhB,KACAmN,EAAA,GACA5C,EAAAkC,EAAAJ,OAAA5B,EAAA,IAQA,GAAAF,EAAA,CAEA,GAAApD,EAAAoD,GACA,IAAA,IAAAmD,EAAA,EAAA3C,EAAAR,EAAAnL,OAAAsO,EAAA3C,IAAA2C,EACAP,GAAAnN,KAAAgN,aAAAvC,EAAA,GAAAgC,EAAAxB,KAAAV,EAAAmD,IAAAZ,EAAAG,QAEA,GAAA,iBAAA1C,GAAA,iBAAAA,GAAA,iBAAAA,EACA4C,GAAAnN,KAAAgN,aAAAvC,EAAA,GAAAgC,EAAAxB,KAAAV,GAAAuC,EAAAG,QACA,GAAA3F,EAAAiD,GAAA,CACA,GAAA,iBAAA0C,EACA,MAAA,IAAAlO,MAAA,kEAKA,OAFAwL,EAAAA,EAAApL,KAAAsN,EAAAb,KAAAqB,EAAAU,MAAAlD,EAAA,GAAAA,EAAA,IAjBA,SAAAvB,GACA,OAAAlI,EAAA6E,OAAAqD,EAAAuD,EAAAK,QAmBAK,GAAA5C,QAEA4C,GAAAnN,KAAAgN,aAAAvC,EAAA,GAAAgC,EAAAK,EAAAG,GAEA,OAAAE,IAGAlB,EAAArM,UAAAyN,eAAA,SAAA5C,EAAAgC,EAAAK,EAAAG,GACA,IAAA1C,EAAAkC,EAAAJ,OAAA5B,EAAA,IAIA,IAAAF,GAAApD,EAAAoD,IAAA,IAAAA,EAAAnL,OACA,OAAAY,KAAAgN,aAAAvC,EAAA,GAAAgC,EAAAK,EAAAG,IAGAhB,EAAArM,UAAAgO,cAAA,SAAAC,EAAAhE,EAAAN,GAGA,IAFA,IAAAuE,EAAAjE,EAAApC,QAAA,UAAA,IACAsG,EAAAF,EAAA1D,MAAA,MACA1L,EAAA,EAAAA,EAAAsP,EAAA3O,OAAAX,IACAsP,EAAAtP,GAAAW,SAAA,EAAAX,IAAA8K,KACAwE,EAAAtP,GAAAqP,EAAAC,EAAAtP,IAGA,OAAAsP,EAAAlB,KAAA,OAGAZ,EAAArM,UAAA0N,cAAA,SAAA7C,EAAAgC,EAAAK,EAAA3D,GACA,GAAA2D,EAAA,CAEA,IAAAvC,EAAAjD,EAAAwF,GAAAA,EAAArC,EAAA,IAAAqC,EAAArC,EAAA,IACA,GAAA,MAAAF,EAAA,CACA,IAAAhB,EAAAkB,EAAA,GACAX,EAAAW,EAAA,GACAZ,EAAAY,EAAA,GACAuD,EAAAzD,EAIA,OAHA,GAAAT,GAAAD,IACAmE,EAAAhO,KAAA4N,cAAArD,EAAAV,EAAAN,IAEAvJ,KAAAgN,aAAAhN,KAAA0G,MAAAsH,EAAA7E,GAAAsD,EAAAK,EAAAkB,MAIA/B,EAAArM,UAAA2N,eAAA,SAAA9C,EAAAgC,GACA,IAAAlC,EAAAkC,EAAAJ,OAAA5B,EAAA,IACA,GAAA,MAAAF,EACA,OAAAA,GAGA0B,EAAArM,UAAA4N,aAAA,SAAA/C,EAAAgC,GACA,IAAAlC,EAAAkC,EAAAJ,OAAA5B,EAAA,IACA,GAAA,MAAAF,EACA,OAAAH,EAAA6D,OAAA1D,IAGA0B,EAAArM,UAAA6N,SAAA,SAAAhD,GACA,OAAAA,EAAA,IAGA,IAAAL,EAAA,CACA5G,KAAA,cACA0K,QAAA,QACA/E,KAAA,CAAA,KAAA,MACAwD,gBAAAI,EACAkB,YAAAlB,EACArG,WAAAqG,EACAlH,YAAAkH,EACAoB,aAAApB,EACAnC,aAAAmC,EACApB,aAAAoB,EACAd,YAAAc,GAIAqB,EAAA,IAAAnC,EAyDA,OApDA7B,EAAAuC,WAAA,WACA,OAAAyB,EAAAzB,cAQAvC,EAAA1D,MAAA,SAAAwC,EAAAC,GACA,OAAAiF,EAAA1H,MAAAwC,EAAAC,IASAiB,EAAAvE,OAAA,SAAAqD,EAAA0C,EAAAkB,EAAA3D,GACA,GAAA,iBAAAD,EACA,MAAA,IAAAmF,UAAA,yDA1pBAlH,EADAQ,EA4pBAuB,GA3pBA,eAAAvB,GA2pBA,mFA5pBA,IAAAA,EAgqBA,OAAAyG,EAAAvI,OAAAqD,EAAA0C,EAAAkB,EAAA3D,IAKAiB,EAAA+D,QAAA,SAAAjF,EAAA0C,EAAAkB,EAAAwB,GAGA,IAAAC,EAAAnE,EAAAvE,OAAAqD,EAAA0C,EAAAkB,GAEA,IAAAxF,EAAAgH,GAGA,OAAAC,EAFAD,EAAAC,IAQAnE,EAAA6D,OA/nBA,SAAAzG,GACA,OAAAgH,OAAAhH,GAAAC,QAAA,eAAA,SAAAgH,GACA,OAAAtG,EAAAsG,MAgoBArE,EAAAQ,QAAAA,EACAR,EAAAuB,QAAAA,EACAvB,EAAA6B,OAAAA,EAEA7B,GAjtBA,iBAAAlL,QAAA,IAAAI,EAAAA,EAAAJ,QAAA6H,IACA,mBAAA2H,QAAAA,OAAAC,IAAAD,OAAA3H,IACAD,EAAAA,GAAA9F,MAAA2E,SAAAoB","file":"FrontendGoogleMap.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\n * This file is developed by evoweb.\n *\n * It is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License, either version 2\n * of the License, or any later version.\n *\n * For the full copyright and license information, please read the\n * LICENSE.txt file that was distributed with this source code.\n */\n\n\nimport FrontendMap from './FrontendMap';\n\n/**\n * Module: TYPO3/CMS/StoreFinder/FrontendGoogleMap\n * contains all logic for the frontend map output\n * @exports TYPO3/CMS/StoreFinder/FrontendGoogleMap\n */\nclass FrontendGoogleMap extends FrontendMap {\n  private map: google.maps.Map;\n  private infoWindow: google.maps.InfoWindow;\n\n  /**\n   * Initialize map\n   */\n  initializeMap(this: FrontendGoogleMap) {\n    let center;\n\n    if (typeof this.mapConfiguration.center !== 'undefined') {\n      center = new google.maps.LatLng(this.mapConfiguration.center.lat, this.mapConfiguration.center.lng);\n    } else {\n      center = new google.maps.LatLng(0, 0);\n    }\n\n    let mapOptions = {\n      zoom: this.mapConfiguration.zoom,\n      center: center,\n      disableDefaultUI: true, // a way to quickly hide all controls\n      zoomControl: true,\n      zoomControlOptions: {\n        style: google.maps.ZoomControlStyle.LARGE\n      },\n      styles: ([] as Array<object>)\n    };\n\n    if (self.mapConfiguration.mapStyles) {\n        mapOptions.styles = self.mapConfiguration.mapStyles;\n    }\n    \n    this.map = new google.maps.Map($('#tx_storefinder_map')[0], mapOptions);\n\n    if (this.mapConfiguration.afterSearch === 0 && navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        let pos = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n\n        this.map.setCenter(pos);\n      });\n    }\n  }\n\n  /**\n   * Initialize information layer on map\n   */\n  initializeLayer(this: FrontendGoogleMap) {\n    if (this.mapConfiguration.apiV3Layers.indexOf('traffic') > -1) {\n      let trafficLayer = new google.maps.TrafficLayer();\n      trafficLayer.setMap(this.map);\n    }\n\n    if (this.mapConfiguration.apiV3Layers.indexOf('bicycling') > -1) {\n      let bicyclingLayer = new google.maps.BicyclingLayer();\n      bicyclingLayer.setMap(this.map);\n    }\n\n    if (this.mapConfiguration.apiV3Layers.indexOf('kml') > -1) {\n      let kmlLayer = new google.maps.KmlLayer({url : this.mapConfiguration.kmlUrl});\n      kmlLayer.setMap(this.map);\n    }\n  }\n\n  /**\n   * Close previously open info window, renders new content and opens the window\n   */\n  showInformation(this: FrontendGoogleMap, location: Location, marker: any) {\n    if (typeof this.mapConfiguration.renderSingleViewCallback === 'function') {\n      this.mapConfiguration.renderSingleViewCallback(location, this.infoWindowTemplate);\n    } else {\n      this.infoWindow.close();\n      this.infoWindow.setContent(this.renderInfoWindowContent(location));\n      this.infoWindow.setPosition(marker.getPosition());\n      this.infoWindow.open(this.map, marker);\n    }\n  }\n\n  /**\n   * Create marker and add to map\n   */\n  createMarker(location: Location, icon: string): google.maps.Marker {\n    let options = {\n        title: location.name,\n        position: new google.maps.LatLng(location.lat, location.lng),\n        icon: icon,\n      },\n      marker = new google.maps.Marker(options);\n    marker.setMap(this.map);\n\n    marker.addListener('click', () => {\n      this.showInformation(location, marker);\n    });\n\n    return marker;\n  }\n\n  /**\n   * Initialize instance of map infoWindow\n   */\n  initializeInfoWindow(this: FrontendGoogleMap) {\n    this.infoWindow = new google.maps.InfoWindow();\n  }\n\n  /**\n   * Close info window\n   */\n  closeInfoWindow() {\n    this.infoWindow.close();\n  }\n\n  /**\n   * Trigger click event on marker on click in result list\n   */\n  openInfoWindow(this: FrontendMap, index: number) {\n    google.maps.event.trigger(this.locations[index].marker, 'click');\n  }\n\n  /**\n   * Load google map script\n   */\n  loadScript() {\n    let self = this,\n      apiUrl = 'https://maps.googleapis.com/maps/api/js?v=3.exp',\n      parameter = '&key=' + this.mapConfiguration.apiConsoleKey;\n\n    if (self.mapConfiguration.language !== '') {\n      parameter += '&language=' + self.mapConfiguration.language;\n    }\n\n    if (self.mapConfiguration.hasOwnProperty('apiUrl')) {\n      apiUrl = self.mapConfiguration.apiUrl;\n    }\n\n    let $jsDeferred = $.Deferred(),\n      $jsFile = $('<script/>', {\n        src: apiUrl + parameter,\n        crossorigin: ''\n      }).appendTo('head');\n\n    $jsDeferred.resolve($jsFile);\n\n    $.when(\n      $jsDeferred.promise()\n    ).done(function () {\n      function wait(this: FrontendMap) {\n        if (typeof google !== 'undefined') {\n          this.postLoadScript();\n        } else {\n          window.requestAnimationFrame(wait.bind(this));\n        }\n      }\n      window.requestAnimationFrame(wait.bind(self));\n    }).fail(function () {\n      console.log('Failed loading resources.');\n    });\n  }\n}\n\n// return instance\nnew FrontendGoogleMap();\n","/**\n * This file is developed by evoweb.\n *\n * It is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License, either version 2\n * of the License, or any later version.\n *\n * For the full copyright and license information, please read the\n * LICENSE.txt file that was distributed with this source code.\n */\n\nimport * as Mustache from 'mustache';\n\nexport default class FrontendMap {\n  public mapConfiguration: MapConfiguration = {\n    active: false,\n    afterSearch: 0,\n    center: {\n      lat: 0,\n      lng: 0\n    },\n    zoom: 18,\n\n    apiConsoleKey: '',\n    apiUrl: '',\n    language: '',\n\n    markerIcon: '',\n    apiV3Layers: '',\n    kmlUrl: '',\n\n    renderSingleViewCallback: null,\n    handleCloseButtonCallback: null\n  };\n  public locations: Array<Location> = [];\n  public locationIndex: number = 0;\n  public infoWindowTemplate: string = '';\n\n  /**\n   * The constructor, set the class properties default values\n   */\n  constructor() {\n    if (typeof window.mapConfiguration == 'object' && window.mapConfiguration.active) {\n      this.mapConfiguration = window.mapConfiguration;\n    }\n    if (this.mapConfiguration) {\n      if (typeof window.locations == 'object') {\n        this.locations = window.locations;\n      }\n      this.loadScript();\n    }\n  }\n\n  initializeMap() {}\n\n  initializeLayer() {}\n\n  /**\n   * Render content of the info window\n   */\n  renderInfoWindowContent(location: Location): string {\n    return Mustache.render(this.infoWindowTemplate, location.information)\n  }\n\n  createMarker(location: Location, icon: string) {}\n\n  /**\n   * Process single location\n   */\n  processLocation(this: FrontendMap, location: Location) {\n    let icon = '';\n    if (location.information.icon) {\n      icon = location.information.icon;\n    } else if (this.mapConfiguration.hasOwnProperty('markerIcon')) {\n      icon = this.mapConfiguration.markerIcon;\n    }\n\n    this.locationIndex++;\n    location.information.index = this.locationIndex;\n    location.marker = this.createMarker(location, icon);\n  }\n\n  /**\n   * Initialize location marker on map\n   */\n  initializeLocations(this: FrontendMap) {\n    this.locations.map(this.processLocation.bind(this));\n  }\n\n  initializeInfoWindow() {}\n\n  closeInfoWindow() {}\n\n  openInfoWindow(this: FrontendMap, index: number) {}\n\n  /**\n   * Initialize list click events\n   */\n  initializeListEvents(this: FrontendMap) {\n    $(document).on('click', '.tx-storefinder .resultList > li', (event: Event, $field: JQuery): void => {\n      this.openInfoWindow($field.data('index'));\n    });\n  }\n\n  /**\n   * Initialize info window template\n   */\n  initializeTemplates(this: FrontendMap) {\n    this.infoWindowTemplate = $('#templateInfoWindow').html();\n    Mustache.parse(this.infoWindowTemplate);\n\n    $(document).on('click', '.tx-storefinder .infoWindow .close', (event: Event, $closeButton: JQuery): void => {\n      if (typeof this.mapConfiguration.renderSingleViewCallback === 'function') {\n        this.mapConfiguration.handleCloseButtonCallback($closeButton);\n      } else {\n        this.closeInfoWindow();\n      }\n    });\n  }\n\n  /**\n   * Post load javascript files\n   */\n  postLoadScript() {\n    this.initializeMap();\n    this.initializeLayer();\n    this.initializeLocations();\n    this.initializeInfoWindow();\n    this.initializeTemplates();\n    this.initializeListEvents();\n  }\n\n  loadScript() {}\n}\n\n","// This file has been generated from mustache.mjs\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Mustache = factory());\n}(this, (function () { 'use strict';\n\n  /*!\n   * mustache.js - Logic-less {{mustache}} templates with JavaScript\n   * http://github.com/janl/mustache.js\n   */\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  /**\n   * Safe way of detecting whether or not the given thing is a primitive and\n   * whether it has the given property\n   */\n  function primitiveHasOwnProperty (primitive, propName) {\n    return (\n      primitive != null\n      && typeof primitive !== 'object'\n      && primitive.hasOwnProperty\n      && primitive.hasOwnProperty(propName)\n    );\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   *\n   * Tokens for partials also contain two more elements: 1) a string value of\n   * indendation prior to that tag and 2) the index of that tag on that line -\n   * eg a value of 2 indicates the partial is the third tag on this line.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n    var lineHasNonSpace = false;\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n    var indentation = '';  // Tracks indentation for tags that use it\n    var tagIndex = 0;      // Stores a count of number of tags encountered on a line\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n            indentation += chr;\n          } else {\n            nonSpace = true;\n            lineHasNonSpace = true;\n            indentation += ' ';\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n') {\n            stripSpace();\n            indentation = '';\n            tagIndex = 0;\n            lineHasNonSpace = false;\n          }\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      if (type == '>') {\n        token = [ type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace ];\n      } else {\n        token = [ type, value, start, scanner.pos ];\n      }\n      tagIndex++;\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    stripSpace();\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, intermediateValue, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          intermediateValue = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           *\n           * In the case where dot notation is used, we consider the lookup\n           * to be successful even if the last \"object\" in the path is\n           * not actually an object but a primitive (e.g., a string, or an\n           * integer), because it is sometimes useful to access a property\n           * of an autoboxed primitive, such as the length of a string.\n           **/\n          while (intermediateValue != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = (\n                hasProperty(intermediateValue, names[index])\n                || primitiveHasOwnProperty(intermediateValue, names[index])\n              );\n\n            intermediateValue = intermediateValue[names[index++]];\n          }\n        } else {\n          intermediateValue = context.view[name];\n\n          /**\n           * Only checking against `hasProperty`, which always returns `false` if\n           * `context.view` is not an object. Deliberately omitting the check\n           * against `primitiveHasOwnProperty` if dot notation is not used.\n           *\n           * Consider this example:\n           * ```\n           * Mustache.render(\"The length of a football field is {{#length}}{{length}}{{/length}}.\", {length: \"100 yards\"})\n           * ```\n           *\n           * If we were to check also against `primitiveHasOwnProperty`, as we do\n           * in the dot notation case, then render call would return:\n           *\n           * \"The length of a football field is 9.\"\n           *\n           * rather than the expected:\n           *\n           * \"The length of a football field is 100 yards.\"\n           **/\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit) {\n          value = intermediateValue;\n          break;\n        }\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` according to the given `tags` or\n   * `mustache.tags` if `tags` is omitted,  and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.cache;\n    var cacheKey = template + ':' + (tags || mustache.tags).join(':');\n    var tokens = cache[cacheKey];\n\n    if (tokens == null)\n      tokens = cache[cacheKey] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   *\n   * If the optional `tags` argument is given here it must be an array with two\n   * string values: the opening and closing tags used in the template (e.g.\n   * [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   */\n  Writer.prototype.render = function render (template, view, partials, tags) {\n    var tokens = this.parse(template, tags);\n    var context = (view instanceof Context) ? view : new Context(view, undefined);\n    return this.renderTokens(tokens, context, partials, template, tags);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate, tags) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, tags);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.indentPartial = function indentPartial (partial, indentation, lineHasNonSpace) {\n    var filteredIndentation = indentation.replace(/[^ \\t]/g, '');\n    var partialByNl = partial.split('\\n');\n    for (var i = 0; i < partialByNl.length; i++) {\n      if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {\n        partialByNl[i] = filteredIndentation + partialByNl[i];\n      }\n    }\n    return partialByNl.join('\\n');\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials, tags) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null) {\n      var lineHasNonSpace = token[6];\n      var tagIndex = token[5];\n      var indentation = token[4];\n      var indentedValue = value;\n      if (tagIndex == 0 && indentation) {\n        indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);\n      }\n      return this.renderTokens(this.parse(indentedValue, tags), context, partials, indentedValue);\n    }\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  var mustache = {\n    name: 'mustache.js',\n    version: '3.2.1',\n    tags: [ '{{', '}}' ],\n    clearCache: undefined,\n    escape: undefined,\n    parse: undefined,\n    render: undefined,\n    to_html: undefined,\n    Scanner: undefined,\n    Context: undefined,\n    Writer: undefined\n  };\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer. If the optional `tags` argument is given here it must be an\n   * array with two string values: the opening and closing tags used in the\n   * template (e.g. [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   */\n  mustache.render = function render (template, view, partials, tags) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials, tags);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html (template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n\n})));\n"]}