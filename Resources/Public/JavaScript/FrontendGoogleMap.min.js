!function r(a,s,p){function l(n,t){if(!s[n]){if(!a[n]){var e="function"==typeof require&&require;if(!t&&e)return e(n,!0);if(c)return c(n,!0);var o=new Error("Cannot find module '"+n+"'");throw o.code="MODULE_NOT_FOUND",o}var i=s[n]={exports:{}};a[n][0].call(i.exports,function(t){return l(a[n][1][t]||t)},i,i.exports,r,a,s,p)}return s[n].exports}for(var c="function"==typeof require&&require,t=0;t<p.length;t++)l(p[t]);return l}({1:[function(t,n,e){"use strict";var o,i=this&&this.__extends||(o=function(t,n){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)n.hasOwnProperty(e)&&(t[e]=n[e])})(t,n)},function(t,n){function e(){this.constructor=t}o(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)});Object.defineProperty(e,"__esModule",{value:!0});var r,a=t("./FrontendMap");function s(){return null!==r&&r.apply(this,arguments)||this}new(r=a.default,i(s,r),s.prototype.initializeMap=function(){var t,e=this;t=void 0!==this.mapConfiguration.center?new google.maps.LatLng(this.mapConfiguration.center.lat,this.mapConfiguration.center.lng):new google.maps.LatLng(0,0);var n={zoom:this.mapConfiguration.zoom,center:t,disableDefaultUI:!0,zoomControl:!0,zoomControlOptions:{style:google.maps.ZoomControlStyle.LARGE},styles:[]};self.mapConfiguration.mapStyles&&(n.styles=self.mapConfiguration.mapStyles),this.map=new google.maps.Map($("#tx_storefinder_map")[0],n),0===this.mapConfiguration.afterSearch&&navigator.geolocation&&navigator.geolocation.getCurrentPosition(function(t){var n={lat:t.coords.latitude,lng:t.coords.longitude};e.map.setCenter(n)})},s.prototype.initializeLayer=function(){-1<this.mapConfiguration.apiV3Layers.indexOf("traffic")&&(new google.maps.TrafficLayer).setMap(this.map),-1<this.mapConfiguration.apiV3Layers.indexOf("bicycling")&&(new google.maps.BicyclingLayer).setMap(this.map),-1<this.mapConfiguration.apiV3Layers.indexOf("kml")&&new google.maps.KmlLayer({url:this.mapConfiguration.kmlUrl}).setMap(this.map)},s.prototype.showInformation=function(t,n){"function"==typeof this.mapConfiguration.renderSingleViewCallback?this.mapConfiguration.renderSingleViewCallback(t,this.infoWindowTemplate):(this.infoWindow.close(),this.infoWindow.setContent(this.renderInfoWindowContent(t)),this.infoWindow.setPosition(n.getPosition()),this.infoWindow.open(this.map,n))},s.prototype.createMarker=function(t,n){var e=this,o={title:t.name,position:new google.maps.LatLng(t.lat,t.lng),icon:n},i=new google.maps.Marker(o);return i.setMap(this.map),i.addListener("click",function(){e.showInformation(t,i)}),i},s.prototype.initializeInfoWindow=function(){this.infoWindow=new google.maps.InfoWindow},s.prototype.closeInfoWindow=function(){this.infoWindow.close()},s.prototype.openInfoWindow=function(t){google.maps.event.trigger(this.locations[t].marker,"click")},s.prototype.loadScript=function(){var t=this,n="https://maps.googleapis.com/maps/api/js?v=3.exp",e="&key="+this.mapConfiguration.apiConsoleKey;""!==t.mapConfiguration.language&&(e+="&language="+t.mapConfiguration.language),t.mapConfiguration.hasOwnProperty("apiUrl")&&(n=t.mapConfiguration.apiUrl);var o=$.Deferred(),i=$("<script/>",{src:n+e,crossorigin:""}).appendTo("head");o.resolve(i),$.when(o.promise()).done(function(){window.requestAnimationFrame(function t(){"undefined"!=typeof google?this.postLoadScript():window.requestAnimationFrame(t.bind(this))}.bind(t))}).fail(function(){console.log("Failed loading resources.")})},s)},{"./FrontendMap":2}],2:[function(t,n,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=t("mustache"),i=(r.prototype.initializeMap=function(){},r.prototype.initializeLayer=function(){},r.prototype.renderInfoWindowContent=function(t){return o.render(this.infoWindowTemplate,t.information)},r.prototype.createMarker=function(t,n){},r.prototype.processLocation=function(t){var n="";t.information.icon?n=t.information.icon:this.mapConfiguration.hasOwnProperty("markerIcon")&&(n=this.mapConfiguration.markerIcon),this.locationIndex++,t.information.index=this.locationIndex,t.marker=this.createMarker(t,n)},r.prototype.initializeLocations=function(){this.locations.map(this.processLocation.bind(this))},r.prototype.initializeInfoWindow=function(){},r.prototype.closeInfoWindow=function(){},r.prototype.openInfoWindow=function(t){},r.prototype.initializeListEvents=function(){var e=this;$(document).on("click",".tx-storefinder .resultList > li",function(t,n){e.openInfoWindow(n.data("index"))})},r.prototype.initializeTemplates=function(){var e=this;this.infoWindowTemplate=$("#templateInfoWindow").html(),o.parse(this.infoWindowTemplate),$(document).on("click",".tx-storefinder .infoWindow .close",function(t,n){"function"==typeof e.mapConfiguration.renderSingleViewCallback?e.mapConfiguration.handleCloseButtonCallback(n):e.closeInfoWindow()})},r.prototype.postLoadScript=function(){this.initializeMap(),this.initializeLayer(),this.initializeLocations(),this.initializeInfoWindow(),this.initializeTemplates(),this.initializeListEvents()},r.prototype.loadScript=function(){},r);function r(){this.mapConfiguration={active:!1,afterSearch:0,center:{lat:0,lng:0},zoom:18,apiConsoleKey:"",apiUrl:"",language:"",markerIcon:"",apiV3Layers:"",kmlUrl:"",renderSingleViewCallback:null,handleCloseButtonCallback:null},this.locations=[],this.locationIndex=0,this.infoWindowTemplate="","object"==typeof window.mapConfiguration&&window.mapConfiguration.active&&(this.mapConfiguration=window.mapConfiguration),this.mapConfiguration&&("object"==typeof window.locations&&(this.locations=window.locations),this.loadScript())}e.default=i},{mustache:3}],3:[function(t,n,e){var o,i;o=this,i=function(){"use strict";var n=Object.prototype.toString,L=Array.isArray||function(t){return"[object Array]"===n.call(t)};function c(t){return"function"==typeof t}function W(t){return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")}function f(t,n){return null!=t&&"object"==typeof t&&n in t}var o=RegExp.prototype.test;var i=/\S/;function I(t){return n=i,e=t,!o.call(n,e);var n,e}var e={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;","`":"&#x60;","=":"&#x3D;"};var S=/\s*/,z=/\s+/,O=/\s*=/,_=/\s*\}/,T=/#|\^|\/|>|\{|&|=|!/;function r(t,n){if(!t)return[];var e,o,i,r=!1,a=[],s=[],p=[],l=!1,c=!1,f="",u=0;function h(){if(l&&!c)for(;p.length;)delete s[p.pop()];else p=[];c=l=!1}function d(t){if("string"==typeof t&&(t=t.split(z,2)),!L(t)||2!==t.length)throw new Error("Invalid tags: "+t);e=new RegExp(W(t[0])+"\\s*"),o=new RegExp("\\s*"+W(t[1])),i=new RegExp("\\s*"+W("}"+t[1]))}d(n||M.tags);for(var g,m,w,y,v,C,k=new U(t);!k.eos();){if(g=k.pos,w=k.scanUntil(e))for(var b=0,x=w.length;b<x;++b)I(y=w.charAt(b))?(p.push(s.length),f+=y):(r=c=!0,f+=" "),s.push(["text",y,g,g+1]),g+=1,"\n"===y&&(h(),f="",u=0,r=!1);if(!k.scan(e))break;if(l=!0,m=k.scan(T)||"name",k.scan(S),"="===m?(w=k.scanUntil(O),k.scan(O),k.scanUntil(o)):"{"===m?(w=k.scanUntil(i),k.scan(_),k.scanUntil(o),m="&"):w=k.scanUntil(o),!k.scan(o))throw new Error("Unclosed tag at "+k.pos);if(v=">"==m?[m,w,g,k.pos,f,u,r]:[m,w,g,k.pos],u++,s.push(v),"#"===m||"^"===m)a.push(v);else if("/"===m){if(!(C=a.pop()))throw new Error('Unopened section "'+w+'" at '+g);if(C[1]!==w)throw new Error('Unclosed section "'+C[1]+'" at '+g)}else"name"===m||"{"===m||"&"===m?c=!0:"="===m&&d(w)}if(h(),C=a.pop())throw new Error('Unclosed section "'+C[1]+'" at '+k.pos);return function(t){for(var n,e=[],o=e,i=[],r=0,a=t.length;r<a;++r)switch((n=t[r])[0]){case"#":case"^":o.push(n),i.push(n),o=n[4]=[];break;case"/":i.pop()[5]=n[2],o=0<i.length?i[i.length-1][4]:e;break;default:o.push(n)}return e}(function(t){for(var n,e,o=[],i=0,r=t.length;i<r;++i)(n=t[i])&&("text"===n[0]&&e&&"text"===e[0]?(e[1]+=n[1],e[3]=n[3]):(o.push(n),e=n));return o}(s))}function U(t){this.string=t,this.tail=t,this.pos=0}function a(t,n){this.view=t,this.cache={".":this.view},this.parent=n}function t(){this.cache={}}U.prototype.eos=function(){return""===this.tail},U.prototype.scan=function(t){var n=this.tail.match(t);if(!n||0!==n.index)return"";var e=n[0];return this.tail=this.tail.substring(e.length),this.pos+=e.length,e},U.prototype.scanUntil=function(t){var n,e=this.tail.search(t);switch(e){case-1:n=this.tail,this.tail="";break;case 0:n="";break;default:n=this.tail.substring(0,e),this.tail=this.tail.substring(e)}return this.pos+=n.length,n},a.prototype.push=function(t){return new a(t,this)},a.prototype.lookup=function(t){var n,e,o,i=this.cache;if(i.hasOwnProperty(t))n=i[t];else{for(var r,a,s,p=this,l=!1;p;){if(0<t.indexOf("."))for(r=p.view,a=t.split("."),s=0;null!=r&&s<a.length;)s===a.length-1&&(l=f(r,a[s])||(e=r,o=a[s],null!=e&&"object"!=typeof e&&e.hasOwnProperty&&e.hasOwnProperty(o))),r=r[a[s++]];else r=p.view[t],l=f(p.view,t);if(l){n=r;break}p=p.parent}i[t]=n}return c(n)&&(n=n.call(this.view)),n},t.prototype.clearCache=function(){this.cache={}},t.prototype.parse=function(t,n){var e=this.cache,o=t+":"+(n||M.tags).join(":"),i=e[o];return null==i&&(i=e[o]=r(t,n)),i},t.prototype.render=function(t,n,e,o){var i=this.parse(t,o),r=n instanceof a?n:new a(n,void 0);return this.renderTokens(i,r,e,t,o)},t.prototype.renderTokens=function(t,n,e,o,i){for(var r,a,s,p="",l=0,c=t.length;l<c;++l)s=void 0,"#"===(a=(r=t[l])[0])?s=this.renderSection(r,n,e,o):"^"===a?s=this.renderInverted(r,n,e,o):">"===a?s=this.renderPartial(r,n,e,i):"&"===a?s=this.unescapedValue(r,n):"name"===a?s=this.escapedValue(r,n):"text"===a&&(s=this.rawValue(r)),void 0!==s&&(p+=s);return p},t.prototype.renderSection=function(t,n,e,o){var i=this,r="",a=n.lookup(t[1]);if(a){if(L(a))for(var s=0,p=a.length;s<p;++s)r+=this.renderTokens(t[4],n.push(a[s]),e,o);else if("object"==typeof a||"string"==typeof a||"number"==typeof a)r+=this.renderTokens(t[4],n.push(a),e,o);else if(c(a)){if("string"!=typeof o)throw new Error("Cannot use higher-order sections without the original template");null!=(a=a.call(n.view,o.slice(t[3],t[5]),function(t){return i.render(t,n,e)}))&&(r+=a)}else r+=this.renderTokens(t[4],n,e,o);return r}},t.prototype.renderInverted=function(t,n,e,o){var i=n.lookup(t[1]);if(!i||L(i)&&0===i.length)return this.renderTokens(t[4],n,e,o)},t.prototype.indentPartial=function(t,n,e){for(var o=n.replace(/[^ \t]/g,""),i=t.split("\n"),r=0;r<i.length;r++)i[r].length&&(0<r||!e)&&(i[r]=o+i[r]);return i.join("\n")},t.prototype.renderPartial=function(t,n,e,o){if(e){var i=c(e)?e(t[1]):e[t[1]];if(null!=i){var r=t[6],a=t[5],s=t[4],p=i;return 0==a&&s&&(p=this.indentPartial(i,s,r)),this.renderTokens(this.parse(p,o),n,e,p)}}},t.prototype.unescapedValue=function(t,n){var e=n.lookup(t[1]);if(null!=e)return e},t.prototype.escapedValue=function(t,n){var e=n.lookup(t[1]);if(null!=e)return M.escape(e)},t.prototype.rawValue=function(t){return t[1]};var M={name:"mustache.js",version:"3.2.1",tags:["{{","}}"],clearCache:void 0,escape:void 0,parse:void 0,render:void 0,to_html:void 0,Scanner:void 0,Context:void 0,Writer:void 0},s=new t;return M.clearCache=function(){return s.clearCache()},M.parse=function(t,n){return s.parse(t,n)},M.render=function(t,n,e,o){if("string"!=typeof t)throw new TypeError('Invalid template! Template should be a "string" but "'+(L(i=t)?"array":typeof i)+'" was given as the first argument for mustache#render(template, view, partials)');var i;return s.render(t,n,e,o)},M.to_html=function(t,n,e,o){var i=M.render(t,n,e);if(!c(o))return i;o(i)},M.escape=function(t){return String(t).replace(/[&<>"'`=\/]/g,function(t){return e[t]})},M.Scanner=U,M.Context=a,M.Writer=t,M},"object"==typeof e&&void 0!==n?n.exports=i():"function"==typeof define&&define.amd?define(i):(o=o||self).Mustache=i()},{}]},{},[1]);
//# sourceMappingURL=FrontendGoogleMap.js.map
